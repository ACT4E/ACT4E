\pagecolor{white}
\begin{definition*}[Monad in functional programming]{}
  A monad \begin{equation*}
    \tup{\return,\mjoin,\fmap,\bind,\fish,\lift} 
  \end{equation*}
  is a set of operations with the following signature:
  \begin{align*}
  \return & :\Obja\to\monA \Obja\\
  \lift & :(\Obja\to \Objb)\to( \Obja\to\monA \Objb)\\
  \fish & :(\Obja\to\monA \Objb)\to(\Objb\to\monA \Objc)\to(\Obja\to\monA \Objc)\\
  \mjoin & :\monA{\monA \Obja}\to\monA \Obja\\
  \fmap & :(\Obja\to \Objb)\to(\monA \Obja\to\monA \Objb)\\
  \bind & :\monA \Obja\to(\Obja\to\monA \Objb)\to\monA \Objb
  \end{align*}
  These maps satisfy the equivalent axioms of unitality and associativity:
  \begin{itemize}
  \item $\return$ is a left identity for $\bind$;
  \item $\return$ is a right identity for $\bind$;
  \item $\bind$ is associative.
  \end{itemize}\end{definition*}

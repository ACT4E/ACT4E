\pagecolor{white}
\begin{definition*}[Design problems with implementation as monotone functions]
  {}
  Suppose that~\funsp,~\ressp are posets. A \emph{\iindex{design problem with implementation}} is a monotone map (a \Set-enriched profunctor)~$\tup{\impsp_d,\prov,\req}\colon \funsp\profto \ressp$, where~$\impsp_d$ is a set,~$\prov$ and~$\req$ are functions from~$\impsp_d$ to~\funsp and~\ressp, respectively
  \begin{equation*}
    \funsp \xleftarrow{\prov} I \xrightarrow{\req} \ressp,
  \end{equation*}
  and $\tup{\impsp_d,\prov,\req}\colon \funsp\profto \ressp$ is given by

  \begin{widepar}
  \begin{equation*}
    \begin{aligned}
      \tup{\impsp_d,\prov,\req}\colon \funsp\profto \ressp \colon \funsp\op \times \ressp &\toinPos \powerset(\impsp_\adp) \\
      \tup{\fun^*, \res} &\mapsto \{ \imp \in \impsp_\adp \colon ( \fun \funleq \prov(i)) \wedge (\req(i) \resleq \res) \},
    \end{aligned}
  \end{equation*}
  \end{widepar}

  where the partial order on~$\powerset\impsp$ is given by subset inclusion.\end{definition*}

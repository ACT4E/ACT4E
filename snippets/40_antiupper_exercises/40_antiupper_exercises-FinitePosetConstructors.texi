% original size: lines = 28 line width = 53
% bounds: min_size = 0 max_size = 120 min_lines = 0
% transformed to maxlen = 53
\begin{minted}[mathescape, breaklines]{python}
class FinitePosetConstructors(ABC):
  @abstractmethod
  def discrete(self, s: FiniteSet) -> FinitePoset:
    """ Creates the discrete poset from any set. """

  @abstractmethod
  def powerset(self, s: FiniteSet) -> FinitePoset:
    """ Creates the powerset poset """

  @abstractmethod
  def uppersets(self, s: FinitePoset) -> FinitePoset:
    """ Creates the upperset poset """

  @abstractmethod
  def lowersets(self, s: FinitePoset) -> FinitePoset:
    """ Creates the lowersets poset """

  @abstractmethod
  def antichains(self, s: FinitePoset) -> FiniteSet:
    """ Creates the antichain set """

  @abstractmethod
  def twisted(self, s: FinitePoset) -> FinitePoset:
    """ Computes the poset of intervals. """

  @abstractmethod
  def arrow(self, s: FinitePoset) -> FinitePoset:
    """ Computes the other of intervals. """
\end{minted}
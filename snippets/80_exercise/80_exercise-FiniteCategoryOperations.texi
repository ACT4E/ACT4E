% original size: lines = 25 line width = 92
% bounds: min_size = 0 max_size = 120 min_lines = 0
% transformed to maxlen = 92
\begin{minted}[mathescape, breaklines]{python}
class FiniteCategoryOperations:

  @abstractmethod
  def product(
    self, components: List[FiniteSemiCategory[Ob, Mor]]
  ) -> FiniteSemiCategory[FiniteSetProduct[Any, Ob], FiniteSetProduct[Any, Mor]]:
    """Product of categories."""

  @abstractmethod
  def disjoint_union(
    self, c1: FiniteSemiCategory[Ob, Mor], c2: FiniteSemiCategory[Ob, Mor]
  ) -> FiniteSemiCategory[
    FiniteSetDisjointUnion[Ob, Any], FiniteSetDisjointUnion[Ob, Any]]:  # TODO: better types

    """Disjoint union of the categories"""

  @abstractmethod
  def arrow(self, c1: FiniteSemiCategory[Ob, Mor]) -> FiniteSemiCategory[
    Mor, FiniteSetProduct[Mor]]:  # TODO: better types
    """Computes the arrow category"""

  @abstractmethod
  def twisted_arrow(self, c1: FiniteSemiCategory[Ob, Mor]) -> FiniteSemiCategory[
    Mor, FiniteSetProduct[Mor]]:  # TODO: better types
    """Computes the twisted arrow category"""
\end{minted}
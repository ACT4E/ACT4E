% original size: lines = 23 line width = 106
% bounds: min_size = 0 max_size = 120 min_lines = 0
% transformed to maxlen = 106
\begin{minted}[mathescape, breaklines]{python}
class FiniteCategoryOperations:
  @abstractmethod
  def product(
    self, c1: Category[Object, Morphism], c2: Category[Object, Morphism]
  ) -> Category[FiniteSetProduct[Any, Object], FiniteSetProduct[Any, Morphism]]:
    """Product of two categories."""

  @abstractmethod
  def disjoint_union(
    self, c1: FiniteCategory[Object, Morphism], c2: FiniteCategory[Object, Morphism]
  ) -> FiniteCategory[Any, Any]:  # TODO: better types

    """Disjoint union for the categories"""

  @abstractmethod
  def arrow(self, c1: FiniteCategory[Object, Morphism]) -> FiniteCategory[Any, Any]:  # TODO: better types
    """Computes the arrow category"""

  @abstractmethod
  def twisted_arrow(
    self, c1: FiniteCategory[Object, Morphism]
  ) -> FiniteCategory[Any, Any]:  # TODO: better types
    """Computes the twisted arrow category"""
\end{minted}
% original size: lines = 25 line width = 72
% bounds: min_size = 0 max_size = 120 min_lines = 0
% transformed to maxlen = 72
\begin{minted}[mathescape, breaklines]{python}
class Setoid(ABC):
  """
  A setoid is something to which elements may belong,
  has a way of distinguishing elements,
  and is able to (de)serialize its elements.
  """

  @abstractmethod
  def contains(self, x: Element) -> bool:
    """ Returns true if the element is in the set. """

  def equal(self, x: Element, y: Element) -> bool:
    """ Returns True if the two elements are to be considered equal. """
    return x == y  # default is to use the Python equality

  def apart(self, x: Element, y: Element) -> bool:
    return not self.equal(x, y)

  @abstractmethod
  def save(self, h: IOHelper, x: Element) -> ConcreteRepr:
    ...

  @abstractmethod
  def load(self, h: IOHelper, o: ConcreteRepr) -> Element:
    ...
\end{minted}
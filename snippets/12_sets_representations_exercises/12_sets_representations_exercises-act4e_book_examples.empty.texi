% original size: lines = 25 line width = 78
% bounds: min_size = 0 max_size = 120 min_lines = 0
% transformed to maxlen = 78
\begin{minted}[mathescape, breaklines]{python}
from typing import Collection, Iterator, List, TypeVar

import act4e_interfaces as I

E = TypeVar("E")

class MyFiniteSet(I.FiniteSet[E]):
  _elements: List[E]

  def __init__(self, elements: Collection[E]): ...

  def size(self) -> int: ...

  def contains(self, x: E) -> bool: ...

  def elements(self) -> Iterator[E]: ...

  def save(self, h: I.IOHelper, x: E) -> I.ConcreteRepr: ...

  def load(self, h: I.IOHelper, o: I.ConcreteRepr) -> E: ...

class MyFiniteSetRepresentation(I.FiniteSetRepresentation):
  def load(self, h: I.IOHelper, data: I.FiniteSet_desc) -> I.FiniteSet[E]: ...

  def save(self, h: I.IOHelper, f: I.FiniteSet[E]) -> I.FiniteSet_desc: ...
\end{minted}
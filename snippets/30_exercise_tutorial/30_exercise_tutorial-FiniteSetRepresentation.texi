\begin{minipage}{79ex}
\begin{minted}[mathescape, breaklines]{python}
class FiniteSetRepresentation(ABC):
  @overload
  def load(self, h: IOHelper, data: FiniteSetDisjointUnion_desc) \
    -> FiniteSetDisjointUnion:
    ...

  @overload
  def load(self, h: IOHelper, data: FiniteSetUnion_desc) -> FiniteSet:
    ...

  @overload
  def load(self, h: IOHelper, data: FiniteSetProduct_desc) -> FiniteSetProduct:
    ...

  @abstractmethod
  def load(self, h: IOHelper, data: FiniteSet_desc) -> FiniteSet:
    """
    Load a finite set from data structure.
    Throw InvalidFormat if the format is incorrect.
    """

  @abstractmethod
  def save(self, h: IOHelper, f: FiniteSet) -> FiniteSet_desc:
    """ Serializes into a data structure """
\end{minted}
\end{minipage}
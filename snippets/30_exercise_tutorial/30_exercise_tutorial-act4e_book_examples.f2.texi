% original size: lines = 18 line width = 91
% bounds: min_size = 0 max_size = 120 min_lines = 0
% transformed to maxlen = 91
\begin{minted}[mathescape, breaklines]{python}
import act4e_interfaces as I
import act4e_interfaces.exceptions
import act4e_interfaces.sets

class MyFiniteSetRepresentation(I.FiniteSetRepresentation):
  def load(self, h: I.IOHelper, data: I.FiniteSet_desc) -> act4e_interfaces.sets.FiniteSet:
    if not isinstance(data, dict):
      raise act4e_interfaces.exceptions.InvalidFormat()
    if not "elements" in data:
      raise act4e_interfaces.exceptions.InvalidFormat()
    if not isinstance(data["elements"], list):
      raise act4e_interfaces.exceptions.InvalidFormat()
    elements = data["elements"]
    return MyFiniteSet(elements)

  def save(self, h: I.IOHelper, f: act4e_interfaces.sets.FiniteSet) -> I.FiniteSet_desc:
    all_elements = [f.save(h, _) for _ in f.elements()]
    return {"elements": all_elements}
\end{minted}